<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2015 rel. 3 sp1 (x64) (http://www.altova.com) by XMLSpy 2015 Professional Ed. Release 3, Installed for 13 users (with SMP from 2015-04-16 to 2016-04-16) (NIH) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:element name="KitData">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Version" type="xs:string" default="2.0"/>
				<xs:element ref="Kits"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Kits">
		<xs:annotation>
			<xs:documentation>List of Marker Sets with channels, alleles, etc</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Set">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Name" type="xs:string"/>
							<xs:element name="NChannels" type="xs:int"/>
							<xs:element name="ILS">
								<xs:complexType>
									<xs:sequence>
										<xs:choice>
											<xs:element name="LSBases">
												<xs:complexType>
													<xs:sequence maxOccurs="unbounded">
														<xs:element name="ILSName" type="xs:string">
															<xs:annotation>
																<xs:documentation>Name of family of ILS's to be used to index search regions below</xs:documentation>
															</xs:annotation>
														</xs:element>
													</xs:sequence>
												</xs:complexType>
											</xs:element>
											<xs:element name="LS">
												<xs:annotation>
													<xs:documentation>Lane Standard</xs:documentation>
												</xs:annotation>
												<xs:complexType>
													<xs:sequence maxOccurs="unbounded">
														<xs:element name="LSName" type="xs:string">
															<xs:annotation>
																<xs:documentation>Individual ILS name - old format to be replaced by family names above</xs:documentation>
															</xs:annotation>
														</xs:element>
													</xs:sequence>
												</xs:complexType>
											</xs:element>
										</xs:choice>
										<xs:element name="ChannelNo" type="xs:int"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="FileNameSuffix" type="xs:string"/>
							<xs:element name="GenotypeSuffix" type="xs:string"/>
							<xs:element name="DirectorySearchString" type="xs:string"/>
							<xs:element name="FsaChannelMap" minOccurs="0">
								<xs:complexType>
									<xs:sequence maxOccurs="unbounded">
										<xs:element name="Channel">
											<xs:complexType>
												<xs:sequence>
													<xs:element name="KitChannelNumber" type="xs:int"/>
													<xs:element name="fsaChannelNumber" type="xs:int"/>
													<xs:element name="Color" type="xs:string" minOccurs="0"/>
													<xs:element name="DyeName" type="xs:string" minOccurs="0"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="AllOLAllelesAccepted" type="xs:boolean" default="false" minOccurs="0"/>
							<xs:sequence maxOccurs="unbounded">
								<xs:element name="Locus">
									<xs:complexType>
										<xs:sequence>
											<xs:element name="Name" type="xs:string"/>
											<xs:element name="Channel" type="xs:integer"/>
											<xs:element name="NoExtension" type="xs:boolean" default="false" minOccurs="0"/>
											<xs:element name="MinBP" type="xs:int">
												<xs:annotation>
													<xs:documentation>Minimum absolute locus BP for definition of extended locus:  defines acceptable extra-ladder alleles</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="MaxBP" type="xs:int">
												<xs:annotation>
													<xs:documentation>Maximum absolute locus BP for definition of extended locus:  defines acceptable extra-ladder alleles</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:choice>
												<xs:annotation>
													<xs:documentation>Only one of these pairs of values is needed.  Prefer 2nd set.</xs:documentation>
												</xs:annotation>
												<xs:sequence>
													<xs:element name="MinGridLSBasePair" type="xs:double">
														<xs:annotation>
															<xs:documentation>Minimum ILS BP to define ladder locus:  for margin of safety, choose somewhat lower than minimum ladder peak</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="MaxGridLSBasePair" type="xs:double">
														<xs:annotation>
															<xs:documentation>Maximum ILS BP to define ladder locus:  for margin of safety, choose somewhat larger than maximum ladder peak</xs:documentation>
														</xs:annotation>
													</xs:element>
												</xs:sequence>
												<xs:element name="SearchRegions">
													<xs:annotation>
														<xs:documentation>This is new format, eventually to replace above</xs:documentation>
													</xs:annotation>
													<xs:complexType>
														<xs:sequence maxOccurs="unbounded">
															<xs:element name="Region">
																<xs:complexType>
																	<xs:sequence>
																		<xs:element name="ILSName" type="xs:string">
																			<xs:annotation>
																				<xs:documentation>Name of ILS family for this search region</xs:documentation>
																			</xs:annotation>
																		</xs:element>
																		<xs:element name="MinGrid" type="xs:double">
																			<xs:annotation>
																				<xs:documentation>Minimum ILS BP to define ladder locus:  for margin of safety, choose somewhat lower than minimum ladder peak</xs:documentation>
																			</xs:annotation>
																		</xs:element>
																		<xs:element name="MaxGrid" type="xs:double">
																			<xs:annotation>
																				<xs:documentation>Maximum ILS BP to define ladder locus:  for margin of safety, choose somewhat larger than maximum ladder peak</xs:documentation>
																			</xs:annotation>
																		</xs:element>
																	</xs:sequence>
																</xs:complexType>
															</xs:element>
														</xs:sequence>
													</xs:complexType>
												</xs:element>
											</xs:choice>
											<xs:element name="CoreRepeatNumber" type="xs:integer" minOccurs="0"/>
											<xs:element name="YLinked" type="xs:boolean" default="false" minOccurs="0"/>
											<xs:element name="MaxExpectedAlleles" type="xs:int" default="2" minOccurs="0"/>
											<xs:element name="MinExpectedAlleles" type="xs:int" default="1" minOccurs="0"/>
											<xs:element name="LadderAlleles">
												<xs:complexType>
													<xs:sequence maxOccurs="unbounded">
														<xs:element name="Allele">
															<xs:complexType>
																<xs:sequence>
																	<xs:element name="Name" type="xs:string"/>
																	<xs:element name="CurveNo" type="xs:integer" minOccurs="0"/>
																	<xs:element name="BP" type="xs:integer"/>
																	<xs:element name="RelativeHeight" type="xs:string" minOccurs="0"/>
																</xs:sequence>
															</xs:complexType>
														</xs:element>
													</xs:sequence>
												</xs:complexType>
											</xs:element>
											<xs:element name="OffLadderAlleles" minOccurs="0">
												<xs:complexType>
													<xs:sequence maxOccurs="unbounded">
														<xs:element name="OLAllele">
															<xs:complexType>
																<xs:sequence>
																	<xs:element name="Name" type="xs:string"/>
																	<xs:element name="BP" type="xs:integer"/>
																</xs:sequence>
															</xs:complexType>
														</xs:element>
													</xs:sequence>
												</xs:complexType>
											</xs:element>
										</xs:sequence>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
</xs:schema>
